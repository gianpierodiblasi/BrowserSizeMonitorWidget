TW.IDE.Widgets.browsersizemonitor=function(){this.widgetIconUrl=function(){return"../Common/extensions/BrowserSizeMonitorWidget/ui/browsersizemonitor/browser.png"};this.widgetProperties=function(){return{name:"BrowserSizeMonitor",description:"Widget to monitor browser size",category:["Common"],iconImage:"browser.png",properties:{Width:{description:"width",defaultValue:200},Height:{description:"height",defaultValue:28},debugMode:{isVisible:!0,baseType:"BOOLEAN",isEditable:!0,defaultValue:!1,description:"true to activate the debug"},
browserWidth:{isVisible:!0,baseType:"NUMBER",isBindingSource:!0,isEditable:!1,description:"The browser width"},browserHeight:{isVisible:!0,baseType:"NUMBER",isBindingSource:!0,isEditable:!1,description:"The browser height"},thresholdActive:{isVisible:!0,baseType:"BOOLEAN",isBindingTarget:!0,isEditable:!0,defaultValue:!0,description:"true if thresholds have to be used for resize's events"},thresholdsWidth:{isVisible:!0,baseType:"STRING",isBindingTarget:!0,defaultValue:"",isEditable:!0,description:'The width thresholds beyond/before which a resize event must be notified, as a list of comma separated values; ex. "w1,w2,w3"'},
thresholdsHeight:{isVisible:!0,baseType:"STRING",isBindingTarget:!0,defaultValue:"",isEditable:!0,description:'The height thresholds beyond/before which a resize event must be notified, as a list of comma separated values; ex. "h1,h2,h3"'}}}};this.widgetEvents=function(){return{WindowResized:{}}};this.widgetServices=function(){return{}};this.renderHtml=function(){return'<div class="widget-content widget-browsersizemonitor"><span class="browsersizemonitor-property">Browser Size Monitor</span></div>'}};